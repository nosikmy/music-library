{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Music Library Service",
        "title": "Music Library",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/library": {
            "get": {
                "description": "Supports pagination(limit, page params)\nSupports filtration(search, dateFrom, dateTo params)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library"
                ],
                "summary": "Get a list of songs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "limit of received data",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 2,
                        "description": "page of data that you want to receive",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query for filtering by song and group names",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the date from which the release dates of the songs begin",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the date from which the release dates of the songs end",
                        "name": "dateTo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LibraryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    }
                }
            }
        },
        "/song": {
            "put": {
                "description": "Fields will be changed if the required parameters for this are specified",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "change all fields of a song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the chosen song",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new name for song",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "new group name to add to the song",
                        "name": "newGroup",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id of the group to be deleted from the song",
                        "name": "groupToDelete",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "verse id, after which a new verse should be inserted. id = 0 - for insertion at the beginning",
                        "name": "newVersePrevId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text for a new verse",
                        "name": "newVerseText",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id of the verse whose text must be changed",
                        "name": "verseId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "new text for a verse",
                        "name": "verseText",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id of the verse to be deleted",
                        "name": "deleteVerseId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Add a song to the library",
                "parameters": [
                    {
                        "description": "Data for adding a song",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApiMusicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AddSongResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Delete a certain song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the chosen song",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    }
                }
            }
        },
        "/song/{id}/text": {
            "get": {
                "description": "Supports pagination(limit, page params)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Get the verses for a certain song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the chosen song",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 2,
                        "example": 2,
                        "description": "limit of received data",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 1,
                        "description": "page of data that you want to receive",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SongTextResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.MusicLibraryError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.MusicLibraryError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "bad request error"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "models.AddSongResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 48
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "200"
                }
            }
        },
        "models.ApiMusicRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "models.Group": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "example": 26
                },
                "groupName": {
                    "type": "string",
                    "example": "Muse"
                }
            }
        },
        "models.LibraryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "payload": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "example": 10
                        },
                        "library": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "200"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "payload": {
                    "type": "string",
                    "example": "null"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Group"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 458
                },
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
                },
                "name": {
                    "type": "string",
                    "example": "Supermassive Black Hole"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "16.07.2006"
                }
            }
        },
        "models.SongTextResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "payload": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "example": 5
                        },
                        "text": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "200"
                }
            }
        }
    }
}